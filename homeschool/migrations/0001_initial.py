# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-04-19 01:41
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(default="Titre de l'annonce", max_length=1000)),
                ('annonce', models.TextField(max_length=10000)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnnotationNom',
            fields=[
                ('idAnnotation', models.AutoField(primary_key=True, serialize=False)),
                ('annotation', models.CharField(default='annotation', max_length=50)),
                ('numero', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Basic_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('video', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=100000, null=True)),
                ('descriptionHidden', models.TextField(blank=True, null=True)),
                ('titre', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateOuverture', models.CharField(blank=True, max_length=100, null=True)),
                ('dateFinInscription', models.CharField(blank=True, max_length=100, null=True)),
                ('dateFinCours', models.CharField(blank=True, max_length=100, null=True)),
                ('montant', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('matiere', models.CharField(choices=[('PHYSIQUES', 'PHYSIQUES'), ('INFORMATIQUE', 'INFORMATIQUE'), ('CHIMIE', 'CHIMIE'), ('BIOLOGIE', 'BIOLOGIE'), ('LANGUE', 'LANGUE'), ('CULTURE GENERALE', 'CULTURE GENERALE'), ('CULTURE MEDICALE', 'CULTURE MEDICALE'), ('ANCIENNES EPREUVES', 'ANCIENNES EPREUVES'), ('MATHEMATIQUES', 'MATHEMATIQUES'), ('ANGLAIS', 'ANGLAIS')], default='BIOLOGIE', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Chapitre',
            fields=[
                ('idChapitre', models.AutoField(primary_key=True, serialize=False)),
                ('intitule', models.CharField(default='Test', max_length=128)),
                ('matiere', models.CharField(choices=[('PHYSIQUES', 'PHYSIQUES'), ('INFORMATIQUE', 'INFORMATIQUE'), ('CHIMIE', 'CHIMIE'), ('BIOLOGIE', 'BIOLOGIE'), ('LANGUE', 'LANGUE'), ('CULTURE GENERALE', 'CULTURE GENERALE'), ('CULTURE MEDICALE', 'CULTURE MEDICALE'), ('ANCIENNES EPREUVES', 'ANCIENNES EPREUVES'), ('MATHEMATIQUES', 'MATHEMATIQUES'), ('ANGLAIS', 'ANGLAIS')], default='BIOLOGIE', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ChapitreClasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(blank=True, max_length=100000, null=True)),
                ('description', models.TextField(blank=True, max_length=100000, null=True)),
                ('titre', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateDebut', models.DateField(blank=True, null=True)),
                ('dateFin', models.DateField(blank=True, null=True)),
                ('numero', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='ChapitreFait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChapitreSelector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('idClass', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(default='Description de la classe', max_length=20000)),
                ('nom', models.CharField(default='Nom de la classe', max_length=50)),
                ('prix', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000000)])),
                ('dateDebut', models.DateTimeField(blank=True, null=True)),
                ('dateFin', models.DateTimeField(blank=True, null=True)),
                ('dateFinInscription', models.DateTimeField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('logo', models.ImageField(upload_to='')),
                ('publier', models.BooleanField()),
                ('tags', models.CharField(blank=True, max_length=1000, null=True)),
                ('matiere', models.CharField(choices=[('PHYSIQUES', 'PHYSIQUES'), ('INFORMATIQUE', 'INFORMATIQUE'), ('CHIMIE', 'CHIMIE'), ('BIOLOGIE', 'BIOLOGIE'), ('LANGUE', 'LANGUE'), ('CULTURE GENERALE', 'CULTURE GENERALE'), ('CULTURE MEDICALE', 'CULTURE MEDICALE'), ('ANCIENNES EPREUVES', 'ANCIENNES EPREUVES'), ('MATHEMATIQUES', 'MATHEMATIQUES'), ('ANGLAIS', 'ANGLAIS')], default='BIOLOGIE', max_length=50)),
                ('niveau', models.CharField(choices=[('Terminale', 'Terminale'), ('Première', 'Première'), ('Seconde', 'Seconde'), ('Troisième', 'Troisième'), ('Quatrième', 'Quatrième'), ('Cinquième', 'Cinquième'), ('Sixième', 'Sixième')], default='Sixième', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Creation_Chapitre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(blank=True, max_length=100000, null=True)),
                ('description', models.TextField(blank=True, max_length=100000, null=True)),
                ('descriptionHidden', models.TextField(blank=True, null=True)),
                ('titre', models.CharField(max_length=1000)),
                ('dateDebut', models.CharField(max_length=100)),
                ('dateFin', models.CharField(max_length=100)),
                ('numero', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Creation_Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enonce', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceHidden', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('qcm', 'Question à choix multiples'), ('qcr', 'Question à complément relationnel'), ('qroc', 'Question à réponse ouverte et courte'), ('qr', 'Question relationnelle'), ('ci', "Choix de l'intrus"), ('qru', 'Question à réponse unique'), ('schema', 'Annotation de schéma')], default='qcm', max_length=50)),
                ('explication', models.TextField(blank=True, max_length=100000, null=True)),
                ('explicationHidden', models.TextField(blank=True, null=True)),
                ('qcm', models.NullBooleanField()),
                ('session', models.CharField(blank=True, choices=[('2010', '2002'), ('2010', '2003'), ('2010', '2004'), ('2010', '2005'), ('2010', '2006'), ('2010', '2007'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016')], default='2010', max_length=50, null=True)),
                ('numero', models.IntegerField(blank=True, null=True)),
                ('partie', models.CharField(blank=True, max_length=50, null=True)),
                ('concours', models.CharField(blank=True, choices=[('ensp', 'Ecole Nationale Supérieure Polytechnique de Yaoundé'), ('medecine', 'Ecole de Médecine'), ('fmsb', 'Faculté de médecine et des sciences biomédicales'), ('fgi', 'Faculté du Génie Industriel'), ('fasa', "Faculté d'Agronomie et des Sciences Agricoles")], default='fmsb', max_length=20, null=True)),
                ('enonceProposition1', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition1Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition1', models.BooleanField(default=False)),
                ('enonceProposition2', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition2Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition2', models.BooleanField(default=False)),
                ('enonceProposition3', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition3Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition3', models.BooleanField(default=False)),
                ('enonceProposition4', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition4Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition4', models.BooleanField(default=False)),
                ('enonceProposition5', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition5Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition5', models.BooleanField(default=False)),
                ('enonceProposition6', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition6Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition6', models.BooleanField(default=False)),
                ('enonceProposition7', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition7Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition7', models.BooleanField(default=False)),
                ('enonceProposition8', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition8Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition8', models.BooleanField(default=False)),
                ('enonceProposition9', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition9Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition9', models.BooleanField(default=False)),
                ('enonceProposition10', models.TextField(blank=True, max_length=100000, null=True)),
                ('enonceProposition10Hidden', models.TextField(blank=True, null=True)),
                ('reponseProposition10', models.BooleanField(default=False)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
            ],
        ),
        migrations.CreateModel(
            name='Creation_TD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consignes', models.TextField(blank=True, max_length=100000, null=True)),
                ('numeroDesQuestions', models.TextField(blank=True, max_length=100000, null=True)),
                ('consignesHidden', models.TextField(blank=True, null=True)),
                ('duree', models.CharField(blank=True, max_length=10, null=True)),
                ('nombre_essai', models.IntegerField(blank=True, null=True)),
                ('titre', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateDebut', models.CharField(blank=True, max_length=100, null=True)),
                ('dateFin', models.CharField(blank=True, max_length=100, null=True)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
            ],
        ),
        migrations.CreateModel(
            name='DemandeInscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Devoir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateDebut', models.DateField(blank=True, null=True)),
                ('dateFin', models.DateField(blank=True, null=True)),
                ('duree', models.CharField(default='time', max_length=300)),
                ('nombreEssai', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('note', models.IntegerField(default=101, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(101)])),
                ('correction', models.BooleanField(default=False)),
                ('consignes', models.TextField(blank=True, max_length=100000, null=True)),
                ('numeroDesQuestions', models.TextField(blank=True, max_length=100000, null=True)),
                ('titre', models.CharField(blank=True, max_length=1000, null=True)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe')),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('dateNaissance', models.DateField(blank=True, null=True)),
                ('lieuNaissance', models.CharField(blank=True, max_length=128, null=True)),
                ('nom', models.CharField(blank=True, max_length=128, null=True)),
                ('prenom', models.CharField(blank=True, max_length=128, null=True)),
                ('sexe', models.CharField(choices=[('Masculin', 'Masculin'), ('Féminin', 'Féminin')], default='Masculin', max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(default='leo@labas.in', max_length=254)),
                ('situation', models.CharField(blank=True, default='Pas encore renseigné !', max_length=128, null=True)),
                ('idEleve', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField()),
                ('etablissement', models.CharField(blank=True, max_length=50, null=True)),
                ('niveau', models.CharField(blank=True, choices=[('Terminale', 'Terminale'), ('Première', 'Première'), ('Seconde', 'Seconde'), ('Troisième', 'Troisième'), ('Quatrième', 'Quatrième'), ('Cinquième', 'Cinquième'), ('Sixième', 'Sixième')], max_length=50, null=True)),
                ('choix1', models.CharField(blank=True, choices=[('Ecole Nationale Supérieure Polytechnique de Yaoundé', 'Ecole Nationale Supérieure Polytechnique de Yaoundé'), ('Ecole de Médecine', 'Ecole de Médecine'), ('Faculté du Génie Industriel', 'Faculté du Génie Industriel'), ("Faculté d'Agronomie et des Sciences Agricoles", "Faculté d'Agronomie et des Sciences Agricoles")], max_length=50, null=True)),
                ('choix2', models.CharField(blank=True, choices=[('Ecole Nationale Supérieure Polytechnique de Yaoundé', 'Ecole Nationale Supérieure Polytechnique de Yaoundé'), ('Ecole de Médecine', 'Ecole de Médecine'), ('Faculté du Génie Industriel', 'Faculté du Génie Industriel'), ("Faculté d'Agronomie et des Sciences Agricoles", "Faculté d'Agronomie et des Sciences Agricoles")], max_length=50, null=True)),
                ('choix3', models.CharField(blank=True, choices=[('Ecole Nationale Supérieure Polytechnique de Yaoundé', 'Ecole Nationale Supérieure Polytechnique de Yaoundé'), ('Ecole de Médecine', 'Ecole de Médecine'), ('Faculté du Génie Industriel', 'Faculté du Génie Industriel'), ("Faculté d'Agronomie et des Sciences Agricoles", "Faculté d'Agronomie et des Sciences Agricoles")], max_length=50, null=True)),
                ('lieuEtablissement', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('dateNaissance', models.DateField(blank=True, null=True)),
                ('lieuNaissance', models.CharField(blank=True, max_length=128, null=True)),
                ('nom', models.CharField(blank=True, max_length=128, null=True)),
                ('prenom', models.CharField(blank=True, max_length=128, null=True)),
                ('sexe', models.CharField(choices=[('Masculin', 'Masculin'), ('Féminin', 'Féminin')], default='Masculin', max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(default='leo@labas.in', max_length=254)),
                ('situation', models.CharField(blank=True, default='Pas encore renseigné !', max_length=128, null=True)),
                ('idEnseignant', models.AutoField(primary_key=True, serialize=False)),
                ('specialite', models.CharField(choices=[('PHYSIQUES', 'PHYSIQUES'), ('INFORMATIQUE', 'INFORMATIQUE'), ('CHIMIE', 'CHIMIE'), ('BIOLOGIE', 'BIOLOGIE'), ('LANGUE', 'LANGUE'), ('CULTURE GENERALE', 'CULTURE GENERALE'), ('CULTURE MEDICALE', 'CULTURE MEDICALE'), ('ANCIENNES EPREUVES', 'ANCIENNES EPREUVES'), ('MATHEMATIQUES', 'MATHEMATIQUES'), ('ANGLAIS', 'ANGLAIS')], default='BIOLOGIE', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnseigneA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('nom', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('description', models.CharField(default='Test', max_length=128)),
                ('adresse', models.CharField(default='Test', max_length=128)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='FeuilleEleve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reponses', models.TextField(default='Pas de reponses actuellement', max_length=10000, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('devoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Devoir')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.DateField()),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Eleve')),
            ],
        ),
        migrations.CreateModel(
            name='ModelDevoirForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idsQuestions', models.CharField(default='idQuestions', max_length=300)),
                ('periode', models.CharField(default='rangeDateTime', max_length=300)),
                ('duree', models.CharField(default='time', max_length=300)),
                ('nombreEssai', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe')),
            ],
        ),
        migrations.CreateModel(
            name='Proposition',
            fields=[
                ('idProposition', models.AutoField(primary_key=True, serialize=False)),
                ('enonce', models.TextField(blank=True, default='Test', max_length=1000, null=True)),
                ('solution', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PropositionRelationnelle',
            fields=[
                ('idPropositionRelationnelle', models.AutoField(primary_key=True, serialize=False)),
                ('enonceA', models.CharField(blank=True, default='element A', max_length=1000, null=True)),
                ('enonceB', models.CharField(blank=True, default='element B', max_length=1001, null=True)),
                ('reponse', models.CharField(blank=True, default='-', max_length=1001, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropositionReponseOuverteCourte',
            fields=[
                ('idPopositionQROC', models.AutoField(primary_key=True, serialize=False)),
                ('enonce', models.TextField(blank=True, default='element A', max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropositionSchema',
            fields=[
                ('idPropositionSchema', models.AutoField(primary_key=True, serialize=False)),
                ('numero', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(1)])),
                ('annotation', models.CharField(blank=True, default='Annontation', max_length=1000, null=True)),
                ('reponse', models.CharField(blank=True, default='-', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('idQuestion', models.AutoField(primary_key=True, serialize=False)),
                ('enonce', models.TextField(blank=True, default='Enonce question', max_length=1000, null=True)),
                ('explication', models.TextField(blank=True, default='Explication reponse', max_length=10001, null=True)),
                ('type', models.CharField(choices=[('qcm', 'Question à choix multiples'), ('qcr', 'Question à complément relationnel'), ('qroc', 'Question à réponse ouverte et courte'), ('qr', 'Question relationnelle'), ('ci', "Choix de l'intrus"), ('qru', 'Question à réponse unique'), ('schema', 'Annotation de schéma')], default='qcm', max_length=50)),
                ('session', models.CharField(choices=[('2010', '2002'), ('2010', '2003'), ('2010', '2004'), ('2010', '2005'), ('2010', '2006'), ('2010', '2007'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016')], default='2010', max_length=50)),
                ('numero', models.IntegerField(blank=True, null=True)),
                ('partie', models.CharField(blank=True, max_length=50, null=True)),
                ('concours', models.CharField(choices=[('ensp', 'Ecole Nationale Supérieure Polytechnique de Yaoundé'), ('medecine', 'Ecole de Médecine'), ('fmsb', 'Faculté de médecine et des sciences biomédicales'), ('fgi', 'Faculté du Génie Industriel'), ('fasa', "Faculté d'Agronomie et des Sciences Agricoles")], default='fmsb', max_length=20)),
                ('fait', models.BooleanField(default=False)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionRelationnelle',
            fields=[
                ('idQuestionRelationnelle', models.AutoField(primary_key=True, serialize=False)),
                ('enonce', models.TextField(blank=True, default='Enonce question', max_length=1000, null=True)),
                ('explication', models.TextField(blank=True, default='Explication reponse', max_length=10000, null=True)),
                ('session', models.CharField(choices=[('2010', '2002'), ('2010', '2003'), ('2010', '2004'), ('2010', '2005'), ('2010', '2006'), ('2010', '2007'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016')], default='2010', max_length=50)),
                ('publier', models.BooleanField(default=False)),
                ('numero', models.IntegerField(blank=True, null=True)),
                ('partie', models.CharField(choices=[('Partie I', 'Partie I'), ('Partie II', 'Partie II'), ('Partie III', 'Partie III'), ('Partie IV', 'Partie IV'), ('Partie V', 'Partie V')], default='Partie 0', max_length=20)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Chapitre')),
                ('propositions', models.ManyToManyField(to='homeschool.PropositionRelationnelle')),
            ],
        ),
        migrations.CreateModel(
            name='Quizz',
            fields=[
                ('idQuizz', models.AutoField(primary_key=True, serialize=False)),
                ('consignes', models.TextField(blank=True, default='Intitule du Quiz', max_length=50, null=True)),
                ('dateCreation', models.DateTimeField(auto_now=True, null=True)),
                ('intitule', models.CharField(blank=True, default='Intitule du Quiz', max_length=50, null=True)),
                ('createur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createur_quiz', to=settings.AUTH_USER_MODEL)),
                ('questions', models.ManyToManyField(to='homeschool.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Received',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_merchant_secret', models.CharField(default='transaction_merchant_secret', max_length=1000)),
                ('transaction_uid', models.CharField(default='transaction_uid', max_length=1000)),
                ('transaction_token', models.CharField(default='transaction_token', max_length=1000)),
                ('transaction_details', models.CharField(default='transaction_details', max_length=1000)),
                ('transaction_amount', models.CharField(default='transaction_amount', max_length=1000)),
                ('transaction_receiver_currency', models.CharField(default='transaction_receiver_currency', max_length=1000)),
                ('transaction_status', models.CharField(default='transaction_status', max_length=1000)),
                ('transaction_type', models.CharField(default='transaction_type', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='RepondA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField(validators=[django.core.validators.MaxValueValidator(300), django.core.validators.MinValueValidator(0)])),
                ('dateReponse', models.DateTimeField(auto_now=True)),
                ('duree', models.IntegerField(blank=True)),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Quizz')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisateur_quiz', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('idSchema', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(default='description', max_length=50)),
                ('image', models.FileField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='SignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20)),
                ('prenom', models.CharField(max_length=20)),
                ('identifiant', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('motdepass', models.CharField(max_length=20)),
                ('confirmpass', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_uid', models.CharField(default='transaction_uid', max_length=1000)),
                ('transaction_confirmation_code', models.CharField(default='transaction_confirmation_code', max_length=1000)),
                ('transaction_token', models.CharField(default='transaction_token', max_length=1000)),
                ('transaction_provider_name', models.CharField(default='transaction_provider_name', max_length=1000)),
                ('transaction_status', models.CharField(default='transaction_status', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='TravauxDirigesClasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consignes', models.TextField(blank=True, max_length=100000, null=True)),
                ('numeroDesQuestions', models.TextField(blank=True, max_length=100000, null=True)),
                ('duree', models.IntegerField(blank=True, null=True)),
                ('nombre_essai', models.IntegerField(blank=True, null=True)),
                ('titre', models.CharField(blank=True, max_length=1000, null=True)),
                ('dateDebut', models.CharField(blank=True, max_length=100, null=True)),
                ('dateFin', models.CharField(blank=True, max_length=100, null=True)),
                ('chapitre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.ChapitreClasse')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe')),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Quizz')),
            ],
        ),
        migrations.CreateModel(
            name='GroupeDeSoutien',
            fields=[
                ('etablissement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='homeschool.Etablissement')),
                ('idGroupeDeSoutien', models.AutoField(primary_key=True, serialize=False)),
            ],
            bases=('homeschool.etablissement',),
        ),
        migrations.AddField(
            model_name='propositionschema',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Question'),
        ),
        migrations.AddField(
            model_name='propositionreponseouvertecourte',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Question'),
        ),
        migrations.AddField(
            model_name='propositionrelationnelle',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Question'),
        ),
        migrations.AddField(
            model_name='proposition',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Question'),
        ),
        migrations.AddField(
            model_name='devoir',
            name='quizz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Quizz'),
        ),
        migrations.AddField(
            model_name='classe',
            name='enseignant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Enseignant'),
        ),
        migrations.AddField(
            model_name='chapitreclasse',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe'),
        ),
        migrations.AlterUniqueTogether(
            name='chapitre',
            unique_together=set([('intitule', 'matiere')]),
        ),
        migrations.AddField(
            model_name='annotationnom',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Schema'),
        ),
        migrations.AddField(
            model_name='annonce',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.Classe'),
        ),
        migrations.AlterUniqueTogether(
            name='reponda',
            unique_together=set([('dateReponse', 'quizz')]),
        ),
        migrations.AlterUniqueTogether(
            name='quizz',
            unique_together=set([('dateCreation', 'intitule')]),
        ),
        migrations.AddField(
            model_name='question',
            name='groupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.GroupeDeSoutien'),
        ),
        migrations.AlterUniqueTogether(
            name='inscription',
            unique_together=set([('eleve', 'classe', 'annee')]),
        ),
        migrations.AlterUniqueTogether(
            name='feuilleeleve',
            unique_together=set([('devoir', 'eleve', 'reponses', 'date')]),
        ),
        migrations.AddField(
            model_name='enseignea',
            name='groupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.GroupeDeSoutien'),
        ),
        migrations.AlterUniqueTogether(
            name='enseignant',
            unique_together=set([('user', 'dateNaissance')]),
        ),
        migrations.AlterUniqueTogether(
            name='eleve',
            unique_together=set([('user', 'dateNaissance')]),
        ),
        migrations.AlterUniqueTogether(
            name='demandeinscription',
            unique_together=set([('classe', 'eleve')]),
        ),
        migrations.AddField(
            model_name='classe',
            name='groupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeschool.GroupeDeSoutien'),
        ),
        migrations.AlterUniqueTogether(
            name='chapitreclasse',
            unique_together=set([('classe', 'numero')]),
        ),
    ]
